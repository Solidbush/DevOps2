version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: mysql-db
    env_file:
      - .env
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

  backend:
    build:
      context: ./back
      dockerfile: Dockerfile
    container_name: spring-backend
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/${MYSQL_DATABASE}
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
    depends_on:
      - db
    networks:
      - app-network
    restart: unless-stopped

  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    container_name: react-frontend
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:8080
    depends_on:
      - backend
    networks:
      - app-network
    ports:
      - "3000:3000"  # Открываем порт 3000 для фронтенда
    restart: unless-stopped

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx-proxy
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
