version: '3.8'

services:
  backend:
    build:
      context: ./back
      dockerfile: Dockerfile
    environment:
      - DB_HOST=db
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    env_file:
      - .env
    volumes:
      - backend_data:/app/data
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    environment:
      - REACT_APP_API_BASE_URL=http://backend:8080
    env_file:
      - .env
    volumes:
      - frontend_build:/usr/share/nginx/html
    depends_on:
      - backend
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost" ]
      interval: 10s
      retries: 5
      start_period: 30s

  db:
    image: mysql:8.0
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      retries: 5
      start_period: 30s

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - frontend_build:/usr/share/nginx/html
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_started
    ports:
      - "80:80"

volumes:
  db_data:
  backend_data:
  frontend_build: